Ques 1. What is the difference between JVM, JRE and JDK?

Ans 1. *Difference between JVM, JRE, and JDK:*
   - *JVM (Java Virtual Machine):* It is an abstract machine that provides a runtime environment in which Java bytecode can be executed. It converts Java bytecode into machine code.
   - *JRE (Java Runtime Environment):* It includes the JVM along with libraries and other components needed for running Java applications but does not include development tools.
   - *JDK (Java Development Kit):* It is a full-featured software development kit that includes JRE, compilers, debuggers, and other tools needed for Java development.


Ques 2. How is Java programming language machine and platform independent?

Ans 2. *Java's Machine and Platform Independence:*
   - Java achieves machine independence through the use of the Java Virtual Machine (JVM), which interprets and executes Java bytecode. The bytecode is generated by the Java compiler, allowing Java programs to run on any device that has a JVM for its platform.


Ques 3. Explain how Java programs are executed by the JVM?

Ans 3. *Execution of Java Programs by JVM:*
   - Java source code is compiled into bytecode by the Java compiler.
   - The Java Virtual Machine (JVM) interprets and executes this bytecode.
   - JVM converts bytecode into machine-specific code using Just-In-Time Compilation (JIT) for better performance.


Ques 4. What is the use var args? 

Ans 4. *Use of Varargs (Variable-Length Argument Lists):*
   - Varargs in Java allow a method to accept a variable number of arguments.
   - It is denoted by an ellipsis (...) followed by the data type and the variable name.
   - Example: public void printNumbers(int... numbers) { /* method implementation */ }


Ques 5. What are the types of variables in java?

Ans 5. *Types of Variables in Java:*
   - *Local Variables:* Declared inside a method or block and have local scope.
   - *Instance Variables (Non-Static Variables):* Belong to an instance of a class and are declared within the class but outside any method.
   - *Class Variables (Static Variables):* Shared among all instances of a class and declared with the static keyword.


Ques 6. How many types of memory areas are allocated by JVM?

Ans 6. *Types of Memory Areas Allocated by JVM:*
   - *Method Area (or Class Area):* Stores class structures, method and constructor code, static variables.
   - *Heap:* Space for objects and is shared among all threads.
   - *Stack:* Each thread has its own stack, storing local variables and controlling method invocation and return.


Ques 7. What is Just-in-time-Compiler(JIT)?

Ans 7. *Just-in-Time Compiler (JIT):*
   - JIT is a part of the Java Runtime Environment (JRE) that improves the performance of Java applications.
   - It compiles Java bytecode into native machine code at runtime.
   - This native code is then executed directly by the host CPU, providing faster execution compared toÂ interpretation.